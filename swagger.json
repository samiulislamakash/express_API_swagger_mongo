{
    "openapi": "3.0.0",
    "info": {
        "title": "Back-End Rest Demo",
        "description": "This is make for a simple demo as i need to use ",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "Samiul Islam",
            "email": "samiulislamw.w.w@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0.0"
    },
    "externalDocs": {
        "description": "Find out more about Swagger",
        "url": "http://swagger.io"
    },
    "tags": [
        {
            "name": "demo",
            "description": "Demo api document"
        },
        {
            "name": "image",
            "description": "Demo image upload document"
        }
    ],
    "paths": {
        "/demo/create": {
            "post": {
                "tags": [
                    "demo"
                ],
                "summary": "Create Operation Demo",
                "description": "this is can create a Demo",
                "operationId": "createDemo",
                "requestBody": {
                    "description": "Create Demo Model Object",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DemoDTO"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "successful operation",
                        "content": {}
                    }
                },
                "x-codegen-request-body-name": "body"
            }
        },
        "/demo/create/bulk": {
            "post": {
                "tags": [
                    "demo"
                ],
                "summary": "multiple create demo",
                "description": "A user can create multiple demo in one request",
                "operationId": "demoBulkInsert",
                "requestBody": {
                    "description": "You give a array of demo in here ",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/DemoDTO"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {}
                }
            }
        },
        "/demo/all": {
            "get": {
                "tags": [
                    "demo"
                ],
                "summary": "Get all demo",
                "description": "a user can get all demo",
                "operationId": "getDemo",
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DemoDTO"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/demo/pagination": {
            "get": {
                "tags": [
                    "demo"
                ],
                "summary": "Get demo with paginator and reverce strategy",
                "description": "a user can get demo with pageination",
                "operationId": "getDemo",
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DemoDTO"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/demo/{id}": {
            "get": {
                "tags": [
                    "demo"
                ],
                "summary": "Find demo by id",
                "description": "A user can find one demo by her id",
                "operationId": "findDemoOne",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DemoDTO"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/demo/update/{id}": {
            "patch": {
                "tags": [
                    "demo"
                ],
                "summary": "update single demo",
                "discription": "a user can update single demo",
                "operationId": "updateDemo",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "you can update any of single column data",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "firstName": {
                                        "type": "string"
                                    },
                                    "lastName": {
                                        "type": "string"
                                    },
                                    "email": {
                                        "type": "string"
                                    },
                                    "age": {
                                        "type": "integer"
                                    },
                                    "description": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {}
                }
            }
        },
        "/demo/delete/{id}": {
            "delete": {
                "tags": [
                    "demo"
                ],
                "summary": "Delete user",
                "discription": "a user can delete spacific demo",
                "operationId": "deleteDemo",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {}
                }
            }
        },
        "/image/create": {
            "post": {
                "tags": [
                    "image"
                ],
                "summary": "image upload",
                "description": "any one can update image ",
                "operationId": "imageUpload",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "image": {
                                        "type": "string",
                                        "format": "binary"
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {}
                }
            }
        }
    },
    "components": {
        "schemas": {
            "DemoDTO": {
                "required": [
                    "firstName",
                    "email"
                ],
                "type": "object",
                "properties": {
                    "firstName": {
                        "type": "string"
                    },
                    "lastName": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "age": {
                        "type": "integer"
                    },
                    "description": {
                        "type": "string"
                    }
                }
            }
        }
    }
}